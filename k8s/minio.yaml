apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: icons-visualizer
  labels:
    app: minio
  name: minio
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
        - image: minio/minio:RELEASE.2021-03-17T02-33-02Z
          name: minio
          args: ["server", "/data"]
          env:
            - name: MINIO_ACCESS_KEY
              valueFrom:
                configMapKeyRef:
                  key: MINIO_ACCESS_KEY
                  name: env
            - name: MINIO_SECRET_KEY
              valueFrom:
                configMapKeyRef:
                  key: MINIO_SECRET_KEY
                  name: env
          ports:
            - containerPort: 9000
          # Readiness probe detects situations when MinIO server instance
          # is not ready to accept traffic. Kubernetes doesn't forward
          # traffic to the pod while readiness checks fail.
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: 9000
            initialDelaySeconds: 120
            periodSeconds: 20
          # Liveness probe detects situations where MinIO server instance
          # is not working properly and needs restart. Kubernetes automatically
          # restarts the pods if liveness checks fail.
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: 9000
            initialDelaySeconds: 120
            periodSeconds: 20
          imagePullPolicy: Always
          resources: {}
          volumeMounts:
            - mountPath: /data
              name: minio-pvc
      restartPolicy: Always
      volumes:
        - name: minio-pvc
          persistentVolumeClaim:
            claimName: minio-pvc
status: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: minio
  namespace: icons-visualizer
  name: minio
spec:
  ports:
    - port: 9000
      targetPort: 9000
      protocol: TCP
  selector:
    # Looks for labels `app:minio` in the namespace and applies the spec
    app: minio
